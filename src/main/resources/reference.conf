reactivemq {
  # shutdown the connection after the specified time when it's in idle state (from having never successfully connected,
  # connection failed with auto-reconnect off, or from explicit CloseConnection)
  #
  # the shutdown will wipe out all subscriptions (to connection state, queues/topics, etc)
  idle-connection-factory-shutdown = 1 minute

  # if a connection is successfully established but is disconnected from an error (not from a CloseConnection),
  # automatically go into reconnect mode
  reestablish-broken-connections = true

  # how often to try reconnecting if reestablish-broken-connections is true; new ConnectionRequests won't immediately
  # trigger a connection attempt while in reconnect state, rather they'll get the successful connection or the error
  # resulting from the next reconnect attempt
  reestablish-attempt-delay = 5 seconds

  close-unused-producers-after = 30 seconds

  # log a Camelish-style "Subscribed <actor> to Queue(<queue>)" message for Queue subscriptions and unsubscriptions
  #   at INFO level
  # Topic subscriptions are always at DEBUG level, as are queues if this is set to false
  log-consumers = true

  # when a QueueConsumer receives a message without an expiration, allow a response to be sent for this amount of time
  #  (default, may be overridden by individual QueueConsumers)
  default-queue-consumer-reply-timeout = 20 seconds

  autoconnect {
    # Create connections when the extension is loaded.
    #
    # Access with
    #   ReActiveMQExtension(system) autoConnects "myAutoConnection"
    # or perhaps
    #   context.actorSelection("/user/reActiveMQ/myAutoConnection") ! Identify("")
    #
    # myAutoConnection = "nio://myamq:61616"
    # mySecondConnection = "tcp://otheramq:61616"
  }

  autoconnect-timeout = 10 seconds
}
